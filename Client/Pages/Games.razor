@page "/Games"

@inject GameHubCommunicator GameHub
@inject IJSRuntime JSRuntime

<div class="row">
    <div class="col-11">
        <h1>Games</h1>
        <div class="row pl-3">
            <NavLink class="nav-link pl-0" href="NewGame" Match="NavLinkMatch.All">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Click here to start a new game...
            </NavLink>
        </div>
        <div class="row pl-3">
            <p><strong>Note: </strong>Completed games are cleared daily at 00:00 (UTC). Games in progress will also be cleared if they are older than 5 days.</p>
        </div>
    </div>
    <div class="col-1">
        <img src="/images/house.png" style="height: 10vh;" />
    </div>
</div>


<div class="container-fluid">
    <div class="row">
        <h3>Public Games</h3>
    </div>
    <div class="row">
        <table id="GamesTable" class="table table-striped table-bordered w-100">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Created</th>
                    <th>Started</th>
                    <th>Completed</th>
                    <th>Number of Players</th>
                    <th>Winner</th>
                    <th>Link</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</div>


@code {
    protected override async Task OnInitializedAsync()
    {
        GameHub.RegisterHandler("NewGameAdded", async () => await JSRuntime.InvokeVoidAsync("welcomeTo.reloadGamesDataTable"));
        await GameHub.StartAsync();
        await GameHub.AddToGroupAsync("GamesPage");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            await JSRuntime.InvokeVoidAsync("welcomeTo.initialiseGamesDataTable");
        }
    }
}